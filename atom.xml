<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xblog</title>
  
  
  <link href="https://x3b0a1.github.io/atom.xml" rel="self"/>
  
  <link href="https://x3b0a1.github.io/"/>
  <updated>2021-07-29T12:13:22.000Z</updated>
  <id>https://x3b0a1.github.io/</id>
  
  <author>
    <name>X3B0A1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于本博客</title>
    <link href="https://x3b0a1.github.io/2021/07/29/about%20this%20blog/"/>
    <id>https://x3b0a1.github.io/2021/07/29/about%20this%20blog/</id>
    <published>2021-07-29T12:13:22.000Z</published>
    <updated>2021-07-29T12:13:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>不要管上面的时间，这个是为了能一直置顶</p><p>本博客（x.blog）是X3B0A1借助hexo框架，icarus主题，花费了两天时间搭建出来的网站</p><p>由于贫穷，暂时不考虑购买服务器和域名</p><p>本博客尚未施工完毕，进入施工场地请佩戴安全帽，小心高空坠物，建议直接从归档中找想要看的文章</p><p>这个博客呢，主要是来记录生活、写题解、写笔记等等，并不是纯学术的博客，也不是纯休闲。平时会把一些感想啊游记啊等等记录进来，也会把平时学习的oi或者开发有关的知识甚至是文化课的东西记录进来。</p><p>总之就是杂七杂八的东西,主页可能有点乱，后续有时间会慢慢修，建议直接从归档里面找看文章</p><p>联系我：qq3242954996,邮箱 <a href="mailto:X3B0A1@gmail.com">X3B0A1@gmail.com</a></p><p>左思右想觉得暂时没什么可说的了qaq<br>有的话会补充<br>the end.<br>by X3B0A1<br>2020-07-29</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不要管上面的时间，这个是为了能一直置顶&lt;/p&gt;
&lt;p&gt;本博客（x.blog）是X3B0A1借助hexo框架，icarus主题，花费了两天时间搭建出来的网站&lt;/p&gt;
&lt;p&gt;由于贫穷，暂时不考虑购买服务器和域名&lt;/p&gt;
&lt;p&gt;本博客尚未施工完毕，进入施工场地请佩戴安全帽，小心高</summary>
      
    
    
    
    
    <category term="about" scheme="https://x3b0a1.github.io/tags/about/"/>
    
  </entry>
  
  <entry>
    <title>组合数学学习笔记</title>
    <link href="https://x3b0a1.github.io/2021/02/18/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>https://x3b0a1.github.io/2021/02/18/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</id>
    <published>2021-02-18T03:35:58.000Z</published>
    <updated>2021-02-18T03:35:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>先唠叨一句</p><p>小奥的组合数学是真的香，我当时csp2020-j初赛的组合数学题就用小奥+亿点枚举居然就都做对了：）</p><h1 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h1><h2 id="两种原理"><a href="#两种原理" class="headerlink" title="两种原理"></a>两种原理</h2><h3 id="加法原理"><a href="#加法原理" class="headerlink" title="加法原理"></a>加法原理</h3><p>假设你现在要从A城到B城市</p><p>有三种方法：</p><p><img src="./imgs/1.png" alt="加法原理"></p><p>坐飞机有三条航线（蓝）</p><p>开车有三条高速（绿）</p><p>坐高铁有两班（棕）</p><p>那请问一共有几种选择？</p><p>$$3 + 3 + 2 = 8$$</p><p>诶嘿，这就是加法原理。</p><h3 id="乘法原理"><a href="#乘法原理" class="headerlink" title="乘法原理"></a>乘法原理</h3><p>现在我们不去B城，去C城</p><p>但是要经过B城</p><p><img src="./imgs/2.png" alt="乘法原理"></p><p>请问一共有几种出行方式？</p><p>当我们走a到b的第一条路，b到c有8种可以选</p><p>当我们走a到b的第二条路，b到c有8种可以选</p><p>以此类推</p><p>当我们走a到b的第8条路，b到c有8种可以选</p><p>因此，A到B有8条路，B到C有8条路</p><p>那一共就有</p><p>$$8\times8 = 64$$</p><p>这就是乘法原理，非常简单。</p><h2 id="基础排列组合"><a href="#基础排列组合" class="headerlink" title="基础排列组合"></a>基础排列组合</h2><h3 id="排列数"><a href="#排列数" class="headerlink" title="排列数"></a>排列数</h3><p>您和您的伙伴一共8人，要去C城，正在机场排队安检，请问您们有几种排队顺序？</p><p>可以想一下，现在有八个位置</p><p><img src="./imgs/3.png" alt="q1"></p><p>现在您们8个人要抢第1个位置，也就是说第1个位置有八种选择</p><p><img src="./imgs/4.png" alt="q2"></p><p><del>经过一番打斗后,</del> 剩下的7个人去抢第二个位置，第2个位置有7种选择</p><p>以此类推</p><p><img src="./imgs/5.png" alt="q3"></p><p>根据乘法原理</p><p>一共有</p><p>$$8\times7\times6\times5\times4\times3\times2\times1 = 8! = 40320 种 $$</p><p>可以发现， $n$ 个元素排列时，一共有 $n!$ 种排法。</p><p>现在您们8人在候机，发现只有4个椅子，您们有几种坐法？（顺序不同也算一种方法）</p><p>首先，您们8人抢第一个椅子，第一个椅子有8种选择</p><p>然后抢第二个，第二个椅子有7种选择</p><p>然后抢第三个，第三个椅子有6种选择</p><p>然后抢第四个，第四个椅子有5种选择</p><p>然后？然后剩下的人站着！（</p><p>于是坐法就有</p><p>$$8\times 7\times 6\times\ 5 = 1680种$$ </p><p>替换成字母就是：n个元素排一个长度为m的序列，有多少种排法？</p><p>$$S = n\times(n-1)\times(n-2)\times…\times(n-m+1)$$</p><p>简化可得：</p><p>$$S = \frac{n!}{(n-m)!}$$</p><p>现在我们来看一些概念</p><p>现在n个元素排一个长度为m的序列，这个排列数我们用$A_n^m$（或$P_n^m$）表示</p><p>$$A_n^m = \frac{n!}{(n-m)!}$$</p><p>前面您8人安检时的排列，即$n=m$时，这样的排列叫做<strong>全排列</strong></p><p>$$A_n^n = n!$$</p><h3 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h3><p>您到了C城，面前有10架共享单车，您和您的伙伴一共8个人，每人选一架共享单车，有几种选法？(共享单车都是一样的，没有什么顺序之分，别抬杠（（ )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先唠叨一句&lt;/p&gt;
&lt;p&gt;小奥的组合数学是真的香，我当时csp2020-j初赛的组合数学题就用小奥+亿点枚举居然就都做对了：）&lt;/p&gt;
&lt;h1 id=&quot;排列组合&quot;&gt;&lt;a href=&quot;#排列组合&quot; class=&quot;headerlink&quot; title=&quot;排列组合&quot;&gt;&lt;/a&gt;排列组</summary>
      
    
    
    
    
    <category term="math" scheme="https://x3b0a1.github.io/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>14.高精度加法</title>
    <link href="https://x3b0a1.github.io/2020/11/29/14.%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/"/>
    <id>https://x3b0a1.github.io/2020/11/29/14.%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/</id>
    <published>2020-11-29T05:00:00.000Z</published>
    <updated>2020-11-29T05:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#10-问题">1.0 问题</a></li><li><a href="#11-思路">1.1 思路</a></li><li><a href="#12-完整代码">1.2 完整代码</a></li><li><a href="#13-时间复杂度分析">1.3 时间复杂度分析</a></li></ul><hr><h2 id="1-0-问题"><a href="#1-0-问题" class="headerlink" title="1.0 问题"></a>1.0 问题</h2><p>题目：<a href="https://www.luogu.com.cn/problem/P1601" target="_blank" rel="noopener">P1601</a></p><p>在我们熟悉的数据类型中，能够储存的最大的数也只是longlong的范围。</p><p>虽然有些编译器也提供__int128类型，但是最多也只能表示40位左右的数，大小依然有限，而且适用范围也很受限。</p><p>那么，又没有办法来模拟非常长的整数呢？</p><p><del>所以用python他不香么，自带高精度还有各种库</del></p><p><del>手动 <a href="https://www.ccf.org.cn/" target="_blank" rel="noopener">@€€￡</a> （doge</del></p><hr><h2 id="1-1-思路"><a href="#1-1-思路" class="headerlink" title="1.1 思路"></a>1.1 思路</h2><p>既然变量不能储存大数，我们可以尝试使用数组来储存一个数。</p><p>用数组的每一位来储存那个数字上的一位，也就是说，用一个长度为n的数组记录一个n位数字。</p><p>那么，问题又来了，我们如何进行加法运算呢</p><p>首先，回顾一下小学学习的竖式计算：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  1 9 1</span><br><span class="line">+ 9 8 1</span><br><span class="line">--------</span><br><span class="line">1 1 7 2</span><br></pre></td></tr></table></figure><p>可以看到，用竖式计算时，为了保证进位正确，是从低位向高位运算的</p><p>我们可以模拟这个运算方法：</p><p>首先为了方便读入，使用string直接读入大数</p><p>将string类型的数转换为数字，并为了进位方便，倒叙存储在数组内</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">len1 = str1.length();</span><br><span class="line">len2 = str2.length();</span><br><span class="line"><span class="comment">//从 len - 1 开始到0遍历数组，减去1是因为数组下标从0开始，方便操作</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len1 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">    <span class="comment">//转换为数字</span></span><br><span class="line">    num1[len1 - i] = str1[i] - <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len2 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">    num2[len2 - i] = str2[i] - <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历数组，对于每一组数，先两个数加起来：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum[i] += num1[i] + num2[i];</span><br></pre></td></tr></table></figure><p>然后把两数的和对10取整，即进位。</p><p>例如，两数的和为9，对10取整为0，即进位为0； 两数的和为19，对10取整为1，即进1位。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum[i + <span class="number">1</span>] = sum[i] / <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>处理完进位后，把两数的和对10取余，留下个位。</p><p>例如，和为9，对10取余，留下个位为9；和为19，对10取余，留下个位为9。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum[i] %= <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>最后将数组倒叙输出即可。</p><hr><h2 id="1-2-完整代码"><a href="#1-2-完整代码" class="headerlink" title="1.2 完整代码"></a>1.2 完整代码</h2><p>根据上面的描述，可以得到如下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2333</span>;</span><br><span class="line"><span class="keyword">int</span> num1[MAXn], num2[MAXn], sum[MAXn];</span><br><span class="line"><span class="keyword">int</span> len1, len2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入</span></span><br><span class="line">    <span class="built_in">string</span> str1, str2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str1 &gt;&gt; str2;</span><br><span class="line">    <span class="comment">//转换</span></span><br><span class="line">    len1 = str1.length();</span><br><span class="line">    len2 = str2.length();</span><br><span class="line">    <span class="comment">//从 len - 1 开始到0遍历数组，减去1是因为数组下标从0开始，方便操作</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len1 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="comment">//倒叙存储         把字符转换为数字</span></span><br><span class="line">        num1[len1 - i] = str1[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len2 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        num2[len2 - i] = str2[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行加运算</span></span><br><span class="line">    <span class="keyword">int</span> len = max(len1, len2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++)&#123;</span><br><span class="line">        <span class="comment">//此处使用“+=” 是因为可能有进位</span></span><br><span class="line">        sum[i] += num1[i] + num2[i];</span><br><span class="line">        <span class="comment">//处理进位  直接把进的为赋值给sum[i - 1]</span></span><br><span class="line">        sum[i + <span class="number">1</span>] = sum[i] / <span class="number">10</span>;</span><br><span class="line">        <span class="comment">//保留个位</span></span><br><span class="line">        sum[i] %= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="comment">//进位有可能导致位数增加1</span></span><br><span class="line">    <span class="keyword">if</span>(sum[len + <span class="number">1</span>])&#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//倒叙输出</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len; i &gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sum[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="1-3-时间复杂度分析"><a href="#1-3-时间复杂度分析" class="headerlink" title="1.3 时间复杂度分析"></a>1.3 时间复杂度分析</h2><p>该算法次数最多的循环为最大数的数位次，时间复杂度即为<br>$O(n)$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#10-问题&quot;&gt;1.0 问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-思路&quot;&gt;1.1 思路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#12-完整代码&quot;&gt;1.2 完整代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#13-时间复</summary>
      
    
    
    
    
    <category term="普及" scheme="https://x3b0a1.github.io/tags/%E6%99%AE%E5%8F%8A/"/>
    
    <category term="模拟" scheme="https://x3b0a1.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>2020CSP-J复赛游记</title>
    <link href="https://x3b0a1.github.io/2020/11/07/2020CSP-J%E5%A4%8D%E8%B5%9B%E6%B8%B8%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/11/07/2020CSP-J%E5%A4%8D%E8%B5%9B%E6%B8%B8%E8%AE%B0/</id>
    <published>2020-11-07T06:00:00.000Z</published>
    <updated>2020-11-07T06:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>人傻了</p><p>网友面基成功√ ，感谢她送给我的妙蛙种子</p><h2 id="赛前"><a href="#赛前" class="headerlink" title="赛前"></a>赛前</h2><p>心里还是很没谱的，想一下其实一年来大部分时间都在水群，以后注意</p><p>简单的跟朋友见面就进去了</p><p>试机写了一个a+b，听说朋友试机的时候敲了个线段树orz</p><p>不得不说南开中学还是很大的，但是貌似里边比较破（？</p><p>还是很强的，看见了不少南开的选手</p><p>还有四个英华的。</p><h2 id="赛时"><a href="#赛时" class="headerlink" title="赛时"></a>赛时</h2><p>简单翻了一下，感觉自己要凉</p><p>先写了40分的T1</p><p>然后把T2写了一下，用了stl的sort，n = 20000 的样例目测t掉了</p><p>T2大概会T掉50%</p><p>然后看了一下T3和T4，又回去写T1</p><p>搞半天之后目测A掉了</p><p>T3T4就写了一个自我感觉能搞到0分的骗分</p><p>一看时间，妈耶还有俩小时</p><p>然后检查几遍文件名啥的，就开始玩</p><p>电脑里啥游戏也没有差评，谷歌小恐龙也没有，桌面小工具也没有，扫雷纸牌啥的也没有</p><p>然后大概把电脑里所有能玩的软件玩了一遍之后，还有一个半小时</p><p>盯着T3和T4发呆了半个小时</p><p>然后揉吧草稿纸半个小时</p><p>最后干发呆半个小时</p><p>结束了</p><p>结束铃声是一个老师拿着铃铛在外头敲 <del>差评</del></p><h2 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h2><p>和朋友去吃了个饭</p><p>第一年完了，也凉了</p><p>但是现在</p><p>赶紧回去学文化课准备月考才是最重要的了</p><p>不然，就真的凉了</p><p>下午考试的各位，rp++;</p><p>想我一样的文化课选手，rp++;</p><p>未来的路，说长不长，说短不短，愿我们能坚持不懈的走下去</p><p>吸取教训，继续努力，</p><p>各位，加油！</p><p>2020年11月7日<br>X3B0A1<br>于复赛后回程路上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;人傻了&lt;/p&gt;
&lt;p&gt;网友面基成功√ ，感谢她送给我的妙蛙种子&lt;/p&gt;
&lt;h2 id=&quot;赛前&quot;&gt;&lt;a href=&quot;#赛前&quot; class=&quot;headerlink&quot; title=&quot;赛前&quot;&gt;&lt;/a&gt;赛前&lt;/h2&gt;&lt;p&gt;心里还是很没谱的，想一下其实一年来大部分时间都在水群，以后注意</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>赛前救命知识</title>
    <link href="https://x3b0a1.github.io/2020/11/05/%E8%B5%9B%E5%89%8D%E6%95%91%E5%91%BD%E7%9F%A5%E8%AF%86/"/>
    <id>https://x3b0a1.github.io/2020/11/05/%E8%B5%9B%E5%89%8D%E6%95%91%E5%91%BD%E7%9F%A5%E8%AF%86/</id>
    <published>2020-11-05T14:00:00.000Z</published>
    <updated>2020-11-05T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>还有1天复赛。</p><p>文化课太 ** 的 ** 了</p><h2 id="考试注意事项相关"><a href="#考试注意事项相关" class="headerlink" title="考试注意事项相关"></a>考试注意事项相关</h2><h3 id="携带物品"><a href="#携带物品" class="headerlink" title="携带物品"></a>携带物品</h3><ul><li>准考证</li><li>参赛证</li><li>身份证</li><li>承诺书</li><li>健康码</li></ul><h3 id="时间地点"><a href="#时间地点" class="headerlink" title="时间地点"></a>时间地点</h3><h4 id="地点"><a href="#地点" class="headerlink" title="地点"></a>地点</h4><p>南开中学北院翔宇楼五楼机房</p><h4 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h4><p>7：50进场试机</p><p>8：30开始比赛</p><p>12：00结束</p><h3 id="文件相关"><a href="#文件相关" class="headerlink" title="文件相关"></a>文件相关</h3><h4 id="后缀名"><a href="#后缀名" class="headerlink" title="后缀名"></a>后缀名</h4><p>test.cpp</p><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><p>D盘下建立以准考证号为名的文件夹</p><p>并给每个题目建立子文件夹</p><p>记得删除无用文件</p><h2 id="算法相关"><a href="#算法相关" class="headerlink" title="算法相关"></a>算法相关</h2><h3 id="程序框架（？）"><a href="#程序框架（？）" class="headerlink" title="程序框架（？）"></a>程序框架（？）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//code here</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C输入输出"><a href="#C输入输出" class="headerlink" title="C输入输出"></a>C输入输出</h3><p>头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"a是%d"</span>,a);</span><br></pre></td></tr></table></figure><p>其中，第一个参数是占位符，常用占位符：</p><ul><li>%d int</li><li>%l64d longlong(windows)</li><li>%lld longlong(Linux)</li><li>%f float double(输出)</li><li>%lf double(读入)</li><li>%.2f 保留两位小数</li><li>%c char</li><li>%s string</li></ul><h3 id="文件重定向"><a href="#文件重定向" class="headerlink" title="文件重定向"></a>文件重定向</h3><p>头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br></pre></td></tr></table></figure><p>在主函数里加上：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">freopen(<span class="string">"test.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"test.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="comment">//code here</span></span><br><span class="line">fclose(<span class="built_in">stdin</span>);</span><br><span class="line">fclose(<span class="built_in">stdout</span>);</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>rp++;</p><p>全篇字少事大.</p><p>end.</p><p>by X3B0A1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;还有1天复赛。&lt;/p&gt;
&lt;p&gt;文化课太 ** 的 ** 了&lt;/p&gt;
&lt;h2 id=&quot;考试注意事项相关&quot;&gt;&lt;a href=&quot;#考试注意事项相关&quot; class=&quot;headerlink&quot; title=&quot;考试注意事项相关&quot;&gt;&lt;/a&gt;考试注意事项相关&lt;/h2&gt;&lt;h3 id=&quot;携带物品</summary>
      
    
    
    
    
    <category term="algorithm" scheme="https://x3b0a1.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>字符串复习笔记</title>
    <link href="https://x3b0a1.github.io/2020/11/04/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/11/04/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-04T14:00:00.000Z</published>
    <updated>2020-11-04T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂且把它放在algorithm标签里，虽然说我不知道这算不算</p><p>还有2天就复赛了，真的是一点也不慌（确信）</p><p>主要还是文化课太**了以至于没时间搞</p><p>挤时间来复习一下，从字符串开始</p><h2 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h2><p>头文件#include &lt; string &gt;</p><p>string str</p><h2 id="读入与写出"><a href="#读入与写出" class="headerlink" title="读入与写出"></a>读入与写出</h2><p>读入一段： cin &gt;&gt; str;</p><p>读入一行： getline(cin, str);</p><p>写出 ：cout &lt;&lt; str;</p><h2 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h2><p>(<del>基情操作</del>基本操作)</p><p>通过变量名操作整体</p><p>通过下标操作部分</p><p>比较 ==  !=  &lt;  &gt;  &lt;=  &gt;=  (使用acill码比较 (好像是这么拼的) )</p><p>拼接：str1+str2</p><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p>长度：str.size()</p><p>子串查找：  str.find(子串)  返回的是第一个字母的下标</p><p>替换： str1 = str0.replace(起始下标,终止下标,替换内容)</p><p>截取： str1 = str0.substr(截取起始下标，终止下标)</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>暂时想不到别的</p><p>普及组一般字符串题都比较水的吧模拟一下就好</p><p>总之对我来说不要产生低错就行</p><p>end.</p><p>by X3B0A2 (我也不知道为什么是2)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;暂且把它放在algorithm标签里，虽然说我不知道这算不算&lt;/p&gt;
&lt;p&gt;还有2天就复赛了，真的是一点也不慌（确信）&lt;/p&gt;
&lt;p&gt;主要还是文化课太**了以至于没时间搞&lt;/p&gt;
&lt;p&gt;挤时间来复习一下，从字符串开始&lt;/p&gt;
&lt;h2 id=&quot;声明变量&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="algorithm" scheme="https://x3b0a1.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>2020CSP-J初赛游记</title>
    <link href="https://x3b0a1.github.io/2020/10/11/2020CSP-J%E5%88%9D%E8%B5%9B%E6%B8%B8%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/10/11/2020CSP-J%E5%88%9D%E8%B5%9B%E6%B8%B8%E8%AE%B0/</id>
    <published>2020-10-11T12:03:15.000Z</published>
    <updated>2020-10-11T12:03:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-赛前"><a href="#1-赛前" class="headerlink" title="1.赛前"></a>1.赛前</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>从赛前一周说起吧qwq</p><p>赛前一周开始着急，然后开始啃蓝书，写初赛博客（虽然没写完）</p><p>然后一直没完整的做过套题，甚至说连程序阅读和填空都几乎没碰过</p><p>但是国庆期间看似努力准备初赛其实在划水</p><p>一共就做了两三次不完整的往年的题，基本选择题的正确率在70%吧，阅读题没碰</p><p>一直到10月9号开始重视起来，那天在学校没事儿干，写了四页关于图的遍历的教程</p><p>10号才接触了原码反码补码</p><p>11号上午起来开始抱佛脚，先后复习了进制转换，一堆数学的东西，图片的存储还有一些排序。</p><p>然后12点半多就从家出发去考场</p><h3 id="考前"><a href="#考前" class="headerlink" title="考前"></a>考前</h3><p>到考场看好多人在看一个考点聚焦，就是一个知识点整合的小报，疑似是什么机构发的，窝也想看看但是没找到/kk。</p><p>还看见俩tctm的老师在喊：tctm的学院来签到！ 差评</p><p>人反正挺多的，后来来了个大巴，里头下来十几个英华的学生（我一眼认出来我妈看了半天还不知道）果然是英华啊，有排面www。</p><p>嗯还看见有天津一中，南开，二南开的一堆大佬，，，ccccorz</p><p>约了一个网友面基，，，</p><h2 id="赛时"><a href="#赛时" class="headerlink" title="赛时"></a>赛时</h2><p>进去本来想拍个照啥的，但是看都着急往里走也就没拍</p><p>那位网友也俩系不上了，算了不管了</p><p>我是9考场（考点天津第45中学），上到二楼，签到，进考场</p><p>问了老师之后发现我的手环不能带</p><p>惨</p><p>于是手环和手机还有袋子被放在了考jiao场shi外</p><p>发草稿纸，答题卡，卷子，呼，这印刷质量我给五星好评，，，，，，，分期付/xyx</p><p>开考，没有手表看不了时间挺难受的，不好控制进度，，</p><p>大概翻了一下题目，开始写</p><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p>前边几个都还行，然后那个伪代码差评，有亿点看不懂</p><p>再往后考了一堆组合数学，于是我靠我那一点点的小奥基础，和亿点点的暴力枚举，算了出来，，</p><p>有个冒泡排序的最小次数，嗯最开始不假思索的选了$n^2$,后来又看了一遍原来是 $n-1$，至少改过来了，还行</p><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><p>有点难度啊，基本上就是死啃，然后模拟，但是都没看懂，，</p><p>第三题的dfs太阴间了，直接放弃aa</p><p>而且因为没有表，无法准确控制进度，就直接能做的做，能蒙的蒙了</p><h3 id="补全程序"><a href="#补全程序" class="headerlink" title="补全程序"></a>补全程序</h3><p>第一个挺简单的，一边过，并且能保证五个全对，15分到手</p><p>第二个没大看懂，就半蒙半做的写了几个，又蒙了几个，然后就这样了</p><h2 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h2><p>对答案，发现自己组合数学题全对了www，小奥NB！！！</p><p>目测：</p><p>选择24分</p><p>阅读拿了6+4.5+8.5</p><p>完善程序拿了15+6</p><p>合计64分</p><p>差强人意</p><p>过肯定是过了</p><p>后来了解到那位朋友没有手机，来我考场找我我也没看见，惨，面基失败，她77分多，复赛再面基8qwq</p><p>初赛过了，那就滚去准备复赛了，期望拿200+，</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>以后参加大考试啥的一定不要带电子表！！带机械表！</li><li>这次复习的时候过于注重那些计算机基础知识了，以至于有一些算法都记不太清，耽误了后边做题。</li><li>时间控制不好，做题的时候有亿点慌乱（与没有表有关系）</li><li>考前练习不够，都没有完整的掐时间的做过一套题</li></ul><p>但，不管怎样，初赛肯定是过了，这次吸取教训，准备11月的复赛</p><h2 id="RP"><a href="#RP" class="headerlink" title="RP++"></a>RP++</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-赛前&quot;&gt;&lt;a href=&quot;#1-赛前&quot; class=&quot;headerlink&quot; title=&quot;1.赛前&quot;&gt;&lt;/a&gt;1.赛前&lt;/h2&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>COCI2017-2018#6</title>
    <link href="https://x3b0a1.github.io/2020/09/17/COCI2017-2018#6/"/>
    <id>https://x3b0a1.github.io/2020/09/17/COCI2017-2018#6/</id>
    <published>2020-09-17T13:41:00.000Z</published>
    <updated>2020-09-17T13:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-题目">1 题目</a></li><li><a href="#2-思路">2 思路</a></li><li><a href="#3-代码实现">3 代码实现</a></li></ul><h1 id="1-题目"><a href="#1-题目" class="headerlink" title="1 题目"></a>1 题目</h1><p>首先我们来看一下题目，精简一下大概就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">某人要筹集n元，每周一筹集x，周二筹集x+k,周三x+2k，以此类推，到周日筹集x+6k,并且要在52个星期内筹集完，求x和k是多少时能刚好筹集n元。</span><br></pre></td></tr></table></figure><h1 id="2-思路"><a href="#2-思路" class="headerlink" title="2 思路"></a>2 思路</h1><p>首先可以统计一下，每周筹集的钱数</p><p>周一 $x$</p><p>周二 $x+k$</p><p>周三 $x+2k$</p><p>周四 $x+3k$</p><p>周五 $x+4k$</p><p>周六 $x+5k$</p><p>周日 $x+6k$</p><p>把他们加起来，可算得每周可以筹集 $7x+21k$ 元。</p><p>并且一共52个星期，一共筹集$7x×52+21k×52$元，也就是 $364x+1092k$ 元。</p><p>同时，题目要求在满足条件的情况下，x尽可能大，k尽可能小，所以我们可以写一个嵌套循环，k在外层，x在内层，循环内部计算 $364x+1092k$ 所得的值，当这个值等于我们要筹集的钱数n时，输出并跳出循环。</p><h1 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3 代码实现"></a>3 代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> n;<span class="comment">//要筹集的钱数</span></span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>( <span class="keyword">int</span> k = <span class="number">1</span>;;k++)&#123; <span class="comment">//k在外层</span></span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= <span class="number">100</span>; x++)&#123; <span class="comment">//x在内层，注意这里题目数据要求x&lt;=100</span></span><br><span class="line">      <span class="keyword">if</span>(<span class="number">364</span>*x + <span class="number">1092</span>*k == n)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span> &lt;&lt; k ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//如果等于要筹集的钱，就输出并且终止程序</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>end.</p><p>by X3B0A1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-题目&quot;&gt;1 题目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-思路&quot;&gt;2 思路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-代码实现&quot;&gt;3 代码实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-题目&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
    <category term="problem" scheme="https://x3b0a1.github.io/tags/problem/"/>
    
  </entry>
  
  <entry>
    <title>高精度加法复习笔记</title>
    <link href="https://x3b0a1.github.io/2020/08/18/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/"/>
    <id>https://x3b0a1.github.io/2020/08/18/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/</id>
    <published>2020-08-18T13:56:00.000Z</published>
    <updated>2020-08-18T13:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#10-问题">1.0 问题</a></li><li><a href="#11-思路">1.1 思路</a></li><li><a href="#12-代码">1.2 代码</a></li><li><a href="#13-时间复杂度分析">1.3 时间复杂度分析</a></li><li><a href="#14-写在最后">1.4 写在最后</a></li></ul><hr><h2 id="1-0-问题"><a href="#1-0-问题" class="headerlink" title="1.0 问题"></a>1.0 问题</h2><p>在我们熟悉的数据类型中，能够储存的最大的数也只是longlong的范围。</p><p>虽然有些编译器也提供__int128类型，但是最多也只能表示40位左右的数，大小依然有限，而且适用范围也很受限。</p><p>那么，又没有办法来模拟非常长的整数呢？</p><hr><h2 id="1-1-思路"><a href="#1-1-思路" class="headerlink" title="1.1 思路"></a>1.1 思路</h2><p>既然变量不能储存大数，我们可以尝试使用数组来储存一个数。</p><p>用数组的每一位来储存那个数字上的一位，也就是说，用一个长度为n的数组记录一个n位数字。</p><p>那么，问题又来了，我们如何进行加法运算呢</p><p>首先，回顾一下小学学习的竖式计算：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  1 9 1</span><br><span class="line">+ 9 8 1</span><br><span class="line">--------</span><br><span class="line">1 1 7 2</span><br></pre></td></tr></table></figure><p>可以看到，用竖式计算时，为了保证进位正确，是从低位向高位运算的</p><p>我们可以模拟这个运算方法：</p><ul><li>方便读入，使用string直接读入大数</li><li>将string类型的数转换为数字，并为了进位方便，倒叙存储在数组内</li><li>将两个数加起来</li><li>把两数的和对10取整，即进位。<ul><li>例如<ul><li>两数的和为9，对10取整为0，即进位为0;</li><li>两数的和为19，对10取整为1，即进1位、</li></ul></li></ul></li><li>处理完进位后，把两数的和对10取余，留下个位。<ul><li>例如<ul><li>和为9，对10取余，留下个位为9</li><li>和为19，对10取余，留下个位为9</li></ul></li></ul></li><li>最后将数组倒叙输出即可。</li></ul><hr><h2 id="1-2-代码"><a href="#1-2-代码" class="headerlink" title="1.2 代码"></a>1.2 代码</h2><p>根据上面的描述，可以得到如下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2333</span>;</span><br><span class="line"><span class="keyword">int</span> num1[MAXn], num2[MAXn], sum[MAXn];</span><br><span class="line"><span class="keyword">int</span> len1, len2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入</span></span><br><span class="line">    <span class="built_in">string</span> str1, str2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str1 &gt;&gt; str2;</span><br><span class="line">    <span class="comment">//转换</span></span><br><span class="line">    len1 = str1.length();</span><br><span class="line">    len2 = str2.length();</span><br><span class="line">    <span class="comment">//从 len - 1 开始到0遍历数组，减去1是因为数组下标从0开始，方便操作</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len1 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="comment">//倒叙存储         把字符转换为数字</span></span><br><span class="line">        num1[len1 - i] = str1[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len2 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        num2[len2 - i] = str2[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行加运算</span></span><br><span class="line">    <span class="keyword">int</span> len = max(len1, len2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++)&#123;</span><br><span class="line">        <span class="comment">//此处使用“+=” 是因为可能有进位</span></span><br><span class="line">        sum[i] += num1[i] + num2[i];</span><br><span class="line">        <span class="comment">//处理进位  直接把进的为赋值给sum[i - 1]</span></span><br><span class="line">        sum[i + <span class="number">1</span>] = sum[i] / <span class="number">10</span>;</span><br><span class="line">        <span class="comment">//保留个位</span></span><br><span class="line">        sum[i] %= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="comment">//进位有可能导致位数增加1</span></span><br><span class="line">    <span class="keyword">if</span>(sum[len + <span class="number">1</span>])&#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//倒叙输出</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len; i &gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sum[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="1-3-时间复杂度分析"><a href="#1-3-时间复杂度分析" class="headerlink" title="1.3 时间复杂度分析"></a>1.3 时间复杂度分析</h2><p>该算法次数最多的循环为最大数的数位次，时间复杂度即为<br>$O(n)$</p><hr><h2 id="1-4-写在最后"><a href="#1-4-写在最后" class="headerlink" title="1.4 写在最后"></a>1.4 写在最后</h2><p>到这里，就是高精度加法的全部内容</p><p><del>所以用python他不香么，自带高精度还有各种库</del></p><p><del>手动 <a href="https://www.ccf.org.cn/" target="_blank" rel="noopener">@€€￡</a> （doge</del></p><p><del>纯粹为了能多加一小节而多扯几句</del></p><p>好了不皮了</p><p>end.</p><p>by X3B0A1</p><p><a rel="license" href="/img/cc.png"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /></a><br />本作品采用<a rel="license noopener" href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank">知识共享署名-相同方式共享 4.0 国际许可协议</a>进行许可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#10-问题&quot;&gt;1.0 问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-思路&quot;&gt;1.1 思路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#12-代码&quot;&gt;1.2 代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#13-时间复杂度分析</summary>
      
    
    
    
    
    <category term="algorithm" scheme="https://x3b0a1.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>20200620蓝桥杯省赛题目（北京）</title>
    <link href="https://x3b0a1.github.io/2020/06/20/20200620%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9B%E9%A2%98%E7%9B%AE/"/>
    <id>https://x3b0a1.github.io/2020/06/20/20200620%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9B%E9%A2%98%E7%9B%AE/</id>
    <published>2020-06-20T05:00:00.000Z</published>
    <updated>2020-06-20T05:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>qaq<br>一共5道题，部分题可能没有复制完整，先放题，题解和总结下午有时间写</p><p>选择题我就不放了吧？</p><p>样例和限制没复制，时间空间限制没写的话应该都是1000ms和125MB</p><p>有的是有图的，这个博客目前放不了图，正在修，所以先凑合看吧。</p><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><blockquote><p>题目描述:</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在<span class="number">2020</span>年这个漫长的寒假里，虽然小蓝和他的同学们都在家里，</span><br><span class="line">但依旧通过网课的方式坚持学习，而老师们也依旧会布置作业</span><br><span class="line">和发放各种电子版的学习资料。为了方便小蓝的学习，妈妈会</span><br><span class="line">把老师发放的材料打印出来。而为了环保，妈妈一般都进行双</span><br><span class="line">面打印，也就是一张纸的正反面都打印出相应的内容。举个例</span><br><span class="line">子来说：如果一份电子材料有<span class="number">3</span>页，那么需要<span class="number">2</span>张纸进行打印；如</span><br><span class="line">果一份电子材料有<span class="number">4</span>页，那么还是需要<span class="number">2</span>张纸进行打印。现在已经</span><br><span class="line">知道了一份电子版的学习材料的页数N，你能帮小蓝计算一下需</span><br><span class="line">要几张纸吗？</span><br></pre></td></tr></table></figure><blockquote><p>输入描述</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入整数N（<span class="number">0</span>≤N≤<span class="number">1000</span>），代表一份电子版的学习材料的页数。</span><br></pre></td></tr></table></figure><blockquote><p>输出描述</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出双面打印所需纸的张数。</span><br></pre></td></tr></table></figure><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><p>编程实现：求完数</p><blockquote><p>背景信息：</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">因子：因子也叫因数，例如<span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>，那么<span class="number">3</span>和<span class="number">5</span>是</span><br><span class="line"><span class="number">15</span>的因子。同时<span class="number">15</span>*<span class="number">1</span>=<span class="number">15</span>，那么<span class="number">1</span>和<span class="number">15</span>也是<span class="number">15</span>的因子。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>，<span class="number">3</span>，<span class="number">5</span>，<span class="number">15</span> 这四个因子是<span class="number">15</span>的所有因子。</span><br><span class="line"></span><br><span class="line">完数：如果一个数等于不含它本身的其他因子之和，</span><br><span class="line">则称该数为‘完数’。如<span class="number">6</span>的因子有<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>，<span class="number">6</span>，且</span><br><span class="line"><span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>= <span class="number">6</span>，因此<span class="number">6</span>是完数。</span><br></pre></td></tr></table></figure><blockquote><p>题目描述:</p></blockquote><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入一个正整数<span class="built_in">N</span>（<span class="number">0</span>&lt;<span class="built_in">N</span>&lt;<span class="number">10000</span>）,输出小于<span class="built_in">N</span>的所有完数</span><br><span class="line">及小于<span class="built_in">N</span>的完数个数（个数前加“*”，例如：*<span class="number">2</span>）。</span><br></pre></td></tr></table></figure><p><strong>这题↑时间限制2000ms</strong></p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p>编程实现：求阴影面积</p><blockquote><p>题目描述:</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户输入一个正整数a（<span class="number">0</span>&lt;a&lt;<span class="number">100</span>）,作为如图半圆的直径，</span><br><span class="line">同时作为如图等腰直角三角形的直角边长度，求下图的阴影</span><br><span class="line">部分面积，如下所示：</span><br></pre></td></tr></table></figure><blockquote><p>提示信息：</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">三角形面积公式：S=(ah)/<span class="number">2</span>   （公式中a为三角形的底边，h为底边所对应的高）</span><br><span class="line"></span><br><span class="line">圆形面积公式：S=πr2（公式中r为圆的半径，π= <span class="number">3.14</span>）</span><br></pre></td></tr></table></figure><p>已知条件：</p><p>1) 半圆的直径和等腰直角三角形直角边长度相同；</p><p>2) 三角形与半圆部分重叠；</p><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><p>编程实现：选择题判定</p><blockquote><p>题目描述:</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">受疫情的影响，<span class="number">2020</span>年蓝桥杯大赛青少年创意编程C++组的省赛在网上进行。选择题有<span class="number">5</span>道，都是单</span><br><span class="line">选题，每道<span class="number">30</span>分，共计<span class="number">150</span>分。每道选择题选对得<span class="number">30</span>分，选错或者不选得<span class="number">0</span>分。</span><br><span class="line"></span><br><span class="line">注意以下仅为假设，不代表本场考试选择题的真实答案，仅是针对本编程题假设出的答案。</span><br><span class="line"></span><br><span class="line">假设正确的答案为“DCBAD”，那么你能根据选手的提交情况，判定选手的选择题总分吗？选手提</span><br><span class="line">交一个由<span class="number">5</span>个字符组成的字符串，代表选手的选项。字符串仅能包含如下<span class="number">5</span>种字符：“D”、“C”</span><br><span class="line">、“B”、“A”、“E”。其中“A”、“B”、“C”、“D”代表选手选择了某个选项，而“E”代表选手未做该题。</span><br></pre></td></tr></table></figure><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><p>话说这题有点，，，</p><p>编程实现：节气</p><blockquote><p>题目描述:</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">夏至将至。《中国天文年历》显示，北京时间<span class="number">6</span>月<span class="number">21</span>日，也就是明天，夏至伴随着接天莲叶的碧，</span><br><span class="line">和映日荷花的红，即将盛装登场。夏至是中国“二十四节气”的第十个节气，“二十四节气”被</span><br><span class="line">列入联合国教科文组织人类非物质文化遗产名录。在国际气象界，这一已有千年历史的时间认知</span><br><span class="line">体系被誉为“中国第五大发明”。</span><br><span class="line"></span><br><span class="line">春雨惊春清谷天，夏满芒夏暑相连。秋处露秋寒霜降，冬雪雪冬小大寒。二十四节气，在四季轮</span><br><span class="line">回流淌，每个节气都有它较为稳定的日子。下表给出了农历庚子年（公历<span class="number">2020</span>年<span class="number">1</span>月<span class="number">25</span>日~<span class="number">2021</span>年<span class="number">2</span></span><br><span class="line">月<span class="number">11</span>日）中，二十四个节气的名称，公历具体日期及汉语拼音的缩写。</span><br></pre></td></tr></table></figure><p>（图片炸了图片炸了）</p><blockquote><p>输入描述</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">整数M，N（<span class="number">2</span>≤M≤<span class="number">12</span>,<span class="number">1</span>≤N≤<span class="number">31</span>），M，N分别代表公历<span class="number">2020</span>年的某月，某日。所给出的数据均为合法日期。</span><br></pre></td></tr></table></figure><blockquote><p>输出描述</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果当天恰好是一个节气，输出这个节气的汉语拼音缩写，如当天不是节气则输出下一个节气的汉语拼音缩写</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;qaq&lt;br&gt;一共5道题，部分题可能没有复制完整，先放题，题解和总结下午有时间写&lt;/p&gt;
&lt;p&gt;选择题我就不放了吧？&lt;/p&gt;
&lt;p&gt;样例和限制没复制，时间空间限制没写的话应该都是1000ms和125MB&lt;/p&gt;
&lt;p&gt;有的是有图的，这个博客目前放不了图，正在修，所以先凑合看</summary>
      
    
    
    
    
    <category term="problem" scheme="https://x3b0a1.github.io/tags/problem/"/>
    
  </entry>
  
  <entry>
    <title>20200530蓝桥杯选拔赛游记&amp;&amp;赛后总结</title>
    <link href="https://x3b0a1.github.io/2020/05/30/20200530%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%80%89%E6%8B%94%E6%B8%B8%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/05/30/20200530%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%80%89%E6%8B%94%E6%B8%B8%E8%AE%B0/</id>
    <published>2020-05-30T07:22:09.000Z</published>
    <updated>2020-05-30T07:22:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>目录</p><ul><li><a href="#1-报名">1 报名</a></li><li><a href="#2-赛前准备">2 赛前准备</a></li><li><a href="#3-意外事件">3 意外事件</a></li><li><a href="#4-赛前90分钟">4 赛前90分钟</a></li><li><a href="#5-赛时">5 赛时</a><ul><li><a href="#选择">选择</a></li><li><a href="#编程">编程</a></li></ul></li><li><a href="#6-赛后总结">6 赛后总结</a></li></ul><h1 id="1-报名"><a href="#1-报名" class="headerlink" title="1 报名"></a>1 报名</h1><p>学校计算机老师来找我，嗯我觉得反正这段时间也没参加过啥大比赛，于是简单问了问题目难度啥的就报了，</p><p><del>300块钱没了QAQ</del></p><h1 id="2-赛前准备"><a href="#2-赛前准备" class="headerlink" title="2 赛前准备"></a>2 赛前准备</h1><p>由于一直是线上学习，然后呢刚开始（五月初）学了一些动规和图论，然后也没怎么刷题，一直是处于摸鱼的状态中。然后五月中旬刷了几道水题，五月下旬就在疯狂的补作业，所以一直没怎么准备。</p><p><del>（身边好几个朋友说：“你特么个班长，起到了良好的带头作用【滑稽】”）</del></p><h1 id="3-意外事件"><a href="#3-意外事件" class="headerlink" title="3 意外事件"></a>3 意外事件</h1><p>有那么几天我甚至忘记了我还有个比赛，然后比赛前一天幸亏老师提醒上去测试一下，才发现老师没发给我准考证awa</p><p>发现是周六13.30到15.30，和别的课冲突了，于是去调课。</p><h1 id="4-赛前90分钟"><a href="#4-赛前90分钟" class="headerlink" title="4 赛前90分钟"></a>4 赛前90分钟</h1><p>12点10分才下上午的课，然后10分钟吃饭，10分钟翻出家里头一个三脚架，因为比赛时需要从后方45°拍摄视频，要求露出上半身和双手，用腾讯会议监控www</p><p>然后12.30多入场（就是入会）经过了20来分钟的角度调试和电脑登陆啊乱七八糟的东西，终于准备好了</p><p>然后还有半个小时，我打算复习一下（没错还剩半个小时我才想起来复习2333）然后自己也没有完整的笔记，就上网上搜，也没啥，于是找到了自己以前教一个同学列的一个表，顺着复习一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1. 输出</span><br><span class="line">2. 变量</span><br><span class="line">    2.1 基本数据类型</span><br><span class="line">    2.2 数据类型转化</span><br><span class="line">           2.2.1 自动类型转换</span><br><span class="line">           2.2.2 强制类型转换</span><br><span class="line">    2.3 运算</span><br><span class="line">3. 输入</span><br><span class="line">4. if语句</span><br><span class="line">    4.1 逻辑运算符</span><br><span class="line">    4.2 if语句</span><br><span class="line">          4.2.1 if语句</span><br><span class="line">          4.2.2 if...else语句</span><br><span class="line">          4.2.3 if...else if...else if... ... ... else语句</span><br><span class="line">5. 循环</span><br><span class="line">    5.1 while循环</span><br><span class="line">          5.1.1 while循环</span><br><span class="line">          5.1.2 do-while循环</span><br><span class="line">    5.2 for循环</span><br><span class="line">          5.2.1 单层循环</span><br><span class="line">          5.2.2 嵌套循环</span><br><span class="line">6. 文件操作</span><br><span class="line">7. 一维数组</span><br><span class="line">    7.1 数组</span><br><span class="line">    7.2 有关数组的函数</span><br><span class="line">8.二维数组</span><br><span class="line">9.字符串</span><br><span class="line">    9.1 字符数组</span><br><span class="line">    9.2 字符串</span><br><span class="line">10. c风格输入输出</span><br><span class="line">11. 结构体</span><br><span class="line">12. 函数</span><br><span class="line">13. 递归</span><br><span class="line">14. 递推</span><br></pre></td></tr></table></figure><p>真的很简单，我觉得初级组应该也就会考这些了。。。</p><p>要是考算法我就凉凉了</p><p>数据结构和指针应该不会考</p><p><del>毕竟是初级组</del><br>然后字符串一直是我不擅长的，于是就又复习了一下以前的代码，贴在下面：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//直接使用cin</span></span><br><span class="line"><span class="comment">//不可带空格</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">string str;</span></span><br><span class="line"><span class="comment">cin&gt;&gt;str;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;str; </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//若要带空格，使用</span></span><br><span class="line"><span class="comment">//getline（cin，变量名 ） </span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">string str;</span></span><br><span class="line"><span class="comment">getline(cin,str);</span></span><br><span class="line"><span class="comment">cout&lt;&lt;str;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串长度  变量名.size();</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">string a = "computer";</span></span><br><span class="line"><span class="comment">cout&lt;&lt;a.size(); </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="comment">//被查找的变量.find(查找的变量); </span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">string str0 = "abcbcbc";</span></span><br><span class="line"><span class="comment">string str1 = "bc";</span></span><br><span class="line"><span class="comment">string str2 = "xy";</span></span><br><span class="line"><span class="comment">int pos = str0.find(str1);</span></span><br><span class="line"><span class="comment">cout&lt;&lt;pos&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">pos = str0.find(str2);</span></span><br><span class="line"><span class="comment">if(pos == string::npos)&#123;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;"yes";</span></span><br><span class="line"><span class="comment">&#125; </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//替换 字符串变量名.relpace(替换的启示下标，被替换的长度，替换的字符串);</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> string str0 = "abcbcw";</span></span><br><span class="line"><span class="comment"> string str1 = "xy";</span></span><br><span class="line"><span class="comment"> //           a bcbc-&gt;xy  w</span></span><br><span class="line"><span class="comment"> str0.replace(1,4,str1);</span></span><br><span class="line"><span class="comment"> //           a    xy     w</span></span><br><span class="line"><span class="comment"> cout&lt;&lt;str0;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//截取</span></span><br><span class="line"> <span class="comment">//字符串变量名.substr(截取的起始下标，截取长度); </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好像文件丢了一些，不管怎么着能复习一点就行</p><p>然后怕卡时间，又看了一下c的输入输出<br>（printf 和 scanf）</p><p>然后就开始考试了awa</p><h1 id="5-赛时"><a href="#5-赛时" class="headerlink" title="5 赛时"></a>5 赛时</h1><p><strong>五道选择题，4道编程题，</strong></p><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>先做选择题：好像不难，但是由于我还没有准备oi的初赛，所以好多基础知识做不上来QAQ</p><p>我列举三道我还记得的题吧</p><p>90-100的素数有几个</p><ul><li>A  0</li><li>B  1</li><li>C  2</li><li>D  3</li></ul><p>众所周知，90-100中只有一个97是质数</p><p>然后。。。我居然一时脑子抽，把91误认为质数了。。。</p><p>囧</p><p>不过没关系</p><p>还有一道是进制转换</p><p>让在几个不同进制的数里头选一个最小的</p><p>八进制的我转过来了（从左往右第一位位数乘8再加上第二位）<br>十六进制的转过来了（方法同八）</p><p>十进制不用转</p><p>以上都是侥幸的出现的两位数</p><p>然后有一个二进制101000</p><p>囧</p><p>我不会转了</p><p>但是我会把10进制转2进制</p><p>然后从上面那三个里头的最小的，转成2进制：</p><p>101010</p><p>great</p><p>101010 &gt; 101000</p><p>所以做出来了。。<br>真侥幸啊。。。</p><p>还有一个关于ip地址的</p><p>幸亏以前有了解一点点网络安全方面的知识</p><p>总之还是挺幸运的。</p><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><p>一共四道题，一一说一下：</p><p>第一题：</p><blockquote><p>输入一个分数，大于等于90，输出A，大于等于80输出B，大于等于70输出C，70以下输出D</p></blockquote><p>真简单，几个if就行</p><p>二话不说上代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span>(n &gt;= <span class="number">90</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"A"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(n &gt;= <span class="number">80</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"B"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(n &gt;= <span class="number">70</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"C"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"D"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于赛时全程录屏+后台检测，所以不敢复制题目下来，凭记忆打出来的，别追求严谨性了，能看懂就行</p><p>第二题</p><blockquote><p>输入一个高度，一个铁球从这个高度下降，每弹一次，高度减少一半，第10次弹起后离地的高度和铁球走过的距离（不包括第十次落下的距离）</p></blockquote><p>嗯不是很难，稍微分析一下即可</p><p>然后我在这道题上居然卡了10分钟？！</p><p>题太水，不想过度讲解www</p><p>原始代码：是错的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">double</span> m, ms = n;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ )&#123;</span><br><span class="line">n /=<span class="number">2</span>;</span><br><span class="line">ms += <span class="number">2</span>*n;</span><br><span class="line">&#125;</span><br><span class="line">m = n;</span><br><span class="line">ms += n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">double</span> m, ms = n;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++ )&#123;</span><br><span class="line"></span><br><span class="line">n /= <span class="number">2</span>;</span><br><span class="line">ms += <span class="number">2</span>*n;</span><br><span class="line">&#125;</span><br><span class="line">m = n/<span class="number">2</span>;</span><br><span class="line">ms += n/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外写了个生成数据和检测答案的程序（俗称对拍）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> ans = n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">n*=<span class="number">2</span>;</span><br><span class="line">ans += n; </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是愉快的ac喽</p><p>第三题：</p><blockquote><p>输入10个数，输出他们的最大值，最小值，平均值，用逗号分割</p></blockquote><p>太过简单了，不上代码了。。。</p><p><del>其实是文件丢了，不想再写了</del></p><p>第四题：<br>这个真的是。。。先看题吧</p><blockquote><p>输入一个数，输出这个数以内的所有回文数</p></blockquote><p>看着很简单</p><p>我记得半年前在洛谷上做过类似的www</p><p>先不管洛谷上的，先说说我是怎么做的</p><p>首先尝试了常规做法。。。不行</p><p>用string。。。不行</p><p>我太菜了</p><p>于是打算暴力打表</p><p>毕竟</p><blockquote><p>暴力出奇迹</p></blockquote><p>然后简单打了个表：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;k&lt;&lt;j&lt;&lt;i&lt;&lt;<span class="string">","</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;n;q++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;q&lt;&lt;k&lt;&lt;j&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成果：<strong>大量数字来袭</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">int</span> aaa[<span class="number">10000000</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">101</span>,<span class="number">111</span>,<span class="number">121</span>,<span class="number">131</span>,<span class="number">141</span>,<span class="number">151</span>,<span class="number">161</span>,<span class="number">171</span>,<span class="number">181</span>,<span class="number">191</span>,<span class="number">202</span>,<span class="number">212</span>,<span class="number">222</span>,<span class="number">232</span>,<span class="number">242</span>,<span class="number">252</span>,<span class="number">262</span>,<span class="number">272</span>,<span class="number">282</span>,<span class="number">292</span>,<span class="number">303</span>,<span class="number">313</span>,<span class="number">323</span>,<span class="number">333</span>,<span class="number">343</span>,<span class="number">353</span>,<span class="number">363</span>,<span class="number">373</span>,<span class="number">383</span>,<span class="number">393</span>,<span class="number">404</span>,<span class="number">414</span>,<span class="number">424</span>,<span class="number">434</span>,<span class="number">444</span>,<span class="number">454</span>,<span class="number">464</span>,<span class="number">474</span>,<span class="number">484</span>,<span class="number">494</span>,<span class="number">505</span>,<span class="number">515</span>,<span class="number">525</span>,<span class="number">535</span>,<span class="number">545</span>,<span class="number">555</span>,<span class="number">565</span>,<span class="number">575</span>,<span class="number">585</span>,<span class="number">595</span>,<span class="number">606</span>,<span class="number">616</span>,<span class="number">626</span>,<span class="number">636</span>,<span class="number">646</span>,<span class="number">656</span>,<span class="number">666</span>,<span class="number">676</span>,<span class="number">686</span>,<span class="number">696</span>,<span class="number">707</span>,<span class="number">717</span>,<span class="number">727</span>,<span class="number">737</span>,<span class="number">747</span>,<span class="number">757</span>,<span class="number">767</span>,<span class="number">777</span>,<span class="number">787</span>,<span class="number">797</span>,<span class="number">808</span>,<span class="number">818</span>,<span class="number">828</span>,<span class="number">838</span>,<span class="number">848</span>,<span class="number">858</span>,<span class="number">868</span>,<span class="number">878</span>,<span class="number">888</span>,<span class="number">898</span>,<span class="number">909</span>,<span class="number">919</span>,<span class="number">929</span>,<span class="number">939</span>,<span class="number">949</span>,<span class="number">959</span>,<span class="number">969</span>,<span class="number">979</span>,<span class="number">989</span>,<span class="number">999</span>,<span class="number">1001</span>,<span class="number">1111</span>,<span class="number">1221</span>,<span class="number">1331</span>,<span class="number">1441</span>,<span class="number">1551</span>,<span class="number">1661</span>,<span class="number">1771</span>,<span class="number">1881</span>,<span class="number">1991</span>,<span class="number">2002</span>,<span class="number">2112</span>,<span class="number">2222</span>,<span class="number">2332</span>,<span class="number">2442</span>,<span class="number">2552</span>,<span class="number">2662</span>,<span class="number">2772</span>,<span class="number">2882</span>,<span class="number">2992</span>,<span class="number">3003</span>,<span class="number">3113</span>,<span class="number">3223</span>,<span class="number">3333</span>,<span class="number">3443</span>,<span class="number">3553</span>,<span class="number">3663</span>,<span class="number">3773</span>,<span class="number">3883</span>,<span class="number">3993</span>,<span class="number">4004</span>,<span class="number">4114</span>,<span class="number">4224</span>,<span class="number">4334</span>,<span class="number">4444</span>,<span class="number">4554</span>,<span class="number">4664</span>,<span class="number">4774</span>,<span class="number">4884</span>,<span class="number">4994</span>,<span class="number">5005</span>,<span class="number">5115</span>,<span class="number">5225</span>,<span class="number">5335</span>,<span class="number">5445</span>,<span class="number">5555</span>,<span class="number">5665</span>,<span class="number">5775</span>,<span class="number">5885</span>,<span class="number">5995</span>,<span class="number">6006</span>,<span class="number">6116</span>,<span class="number">6226</span>,<span class="number">6336</span>,<span class="number">6446</span>,<span class="number">6556</span>,<span class="number">6666</span>,<span class="number">6776</span>,<span class="number">6886</span>,<span class="number">6996</span>,<span class="number">7007</span>,<span class="number">7117</span>,<span class="number">7227</span>,<span class="number">7337</span>,<span class="number">7447</span>,<span class="number">7557</span>,<span class="number">7667</span>,<span class="number">7777</span>,<span class="number">7887</span>,<span class="number">7997</span>,<span class="number">8008</span>,<span class="number">8118</span>,<span class="number">8228</span>,<span class="number">8338</span>,<span class="number">8448</span>,<span class="number">8558</span>,<span class="number">8668</span>,<span class="number">8778</span>,<span class="number">8888</span>,<span class="number">8998</span>,<span class="number">9009</span>,<span class="number">9119</span>,<span class="number">9229</span>,<span class="number">9339</span>,<span class="number">9449</span>,<span class="number">9559</span>,<span class="number">9669</span>,<span class="number">9779</span>,<span class="number">9889</span>,<span class="number">9999</span>,..............................省略大量数字,<span class="number">900009</span>,<span class="number">901109</span>,<span class="number">902209</span>,<span class="number">903309</span>,<span class="number">904409</span>,<span class="number">905509</span>,<span class="number">906609</span>,<span class="number">907709</span>,<span class="number">908809</span>,<span class="number">909909</span>,<span class="number">910019</span>,<span class="number">911119</span>,<span class="number">912219</span>,<span class="number">913319</span>,<span class="number">914419</span>,<span class="number">915519</span>,<span class="number">916619</span>,<span class="number">917719</span>,<span class="number">918819</span>,<span class="number">919919</span>,<span class="number">920029</span>,<span class="number">921129</span>,<span class="number">922229</span>,<span class="number">923329</span>,<span class="number">924429</span>,<span class="number">925529</span>,<span class="number">926629</span>,<span class="number">927729</span>,<span class="number">928829</span>,<span class="number">929929</span>,<span class="number">930039</span>,<span class="number">931139</span>,<span class="number">932239</span>,<span class="number">933339</span>,<span class="number">934439</span>,<span class="number">935539</span>,<span class="number">936639</span>,<span class="number">937739</span>,<span class="number">938839</span>,<span class="number">939939</span>,<span class="number">940049</span>,<span class="number">941149</span>,<span class="number">942249</span>,<span class="number">943349</span>,<span class="number">944449</span>,<span class="number">945549</span>,<span class="number">946649</span>,<span class="number">947749</span>,<span class="number">948849</span>,<span class="number">949949</span>,<span class="number">950059</span>,<span class="number">951159</span>,<span class="number">952259</span>,<span class="number">953359</span>,<span class="number">954459</span>,<span class="number">955559</span>,<span class="number">956659</span>,<span class="number">957759</span>,<span class="number">958859</span>,<span class="number">959959</span>,<span class="number">960069</span>,<span class="number">961169</span>,<span class="number">962269</span>,<span class="number">963369</span>,<span class="number">964469</span>,<span class="number">965569</span>,<span class="number">966669</span>,<span class="number">967769</span>,<span class="number">968869</span>,<span class="number">969969</span>,<span class="number">970079</span>,<span class="number">971179</span>,<span class="number">972279</span>,<span class="number">973379</span>,<span class="number">974479</span>,<span class="number">975579</span>,<span class="number">976679</span>,<span class="number">977779</span>,<span class="number">978879</span>,<span class="number">979979</span>,<span class="number">980089</span>,<span class="number">981189</span>,<span class="number">982289</span>,<span class="number">983389</span>,<span class="number">984489</span>,<span class="number">985589</span>,<span class="number">986689</span>,<span class="number">987789</span>,<span class="number">988889</span>,<span class="number">989989</span>,<span class="number">990099</span>,<span class="number">991199</span>,<span class="number">992299</span>,<span class="number">993399</span>,<span class="number">994499</span>,<span class="number">995599</span>,<span class="number">996699</span>,<span class="number">997799</span>,<span class="number">998899</span>,<span class="number">999999</span>&#125;;</span><br></pre></td></tr></table></figure><p>然后后边的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//这里是上面的大打表数组</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(aaa[i+<span class="number">1</span>] &gt; n)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;aaa[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">sum++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;aaa[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"*"</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也不给个数据范围，差评</p><p>然后这题就ac了</p><p>赛后好奇的看了我洛谷以前的提交记录</p><p>嗯之前那道题是回文质数，就是在回文的基础上还是质数</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/8415dk72.png" alt="题面"></p><p>历史分数：100</p><p>www惊恐</p><p>继续看提交记录</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/2j2st84u.png" alt="提交记录"></p><p>一次ac？</p><p>看一下提交记录的代码<br><img src="https://cdn.luogu.com.cn/upload/image_hosting/t3j937f2.png" alt="代码"></p><p>额</p><p>又是打表</p><p>好吧。。。</p><p>第四题正常解发代码写出来后我会写博客的。</p><p>然后这个时候才过了一个小时</p><p>呆着也是待着，不如提交了</p><p>然后就交卷了</p><h1 id="6-赛后总结"><a href="#6-赛后总结" class="headerlink" title="6 赛后总结"></a>6 赛后总结</h1><p>整体来说还算可以的，但是质数的题错的很。。。然后进制转换也是很侥幸的答对了。。最后一题暴力也是不应该的。。</p><p>总结几点：</p><ol><li>基础不牢固</li><li>以前没有记笔记写博客</li><li>做题时没有深度的思考</li></ol><p>嗯基本就是这样</p><p>哇这篇博客源码我居然写了将近500行</p><p>好了好了就到这儿了</p><p>附：qq号：3242954996<br>愿意带我的大佬可以加我鸭<br>蒟蒻也可以和我一起学习awa</p><p>the end.<br>by X3B0A1<br>2020.5.30</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-报名&quot;&gt;1 报名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-赛前准备&quot;&gt;2 赛前准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-意外事件&quot;&gt;3 意外事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#4</summary>
      
    
    
    
    
    <category term="游记" scheme="https://x3b0a1.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>手动收藏一些有用的文章</title>
    <link href="https://x3b0a1.github.io/2020/05/28/%E6%89%8B%E5%8A%A8%E6%94%B6%E8%97%8F%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>https://x3b0a1.github.io/2020/05/28/%E6%89%8B%E5%8A%A8%E6%94%B6%E8%97%8F%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%96%87%E7%AB%A0/</id>
    <published>2020-05-28T11:12:36.000Z</published>
    <updated>2020-05-28T11:12:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/130248908" target="_blank" rel="noopener">背包问题（一系列）</a><br><a href="https://www.zhihu.com/question/23995189/answer/613096905" target="_blank" rel="noopener">动态规划rxz</a><br><a href="https://www.jianshu.com/p/191d1e21f7ed/" target="_blank" rel="noopener">m↓语法</a></p><p>未完待续…<br>by X3B0A1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/130248908&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;背包问题（一系列）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/</summary>
      
    
    
    
    
    <category term="favorites" scheme="https://x3b0a1.github.io/tags/favorites/"/>
    
  </entry>
  
  <entry>
    <title>天津游记</title>
    <link href="https://x3b0a1.github.io/2020/05/19/%E5%A4%A9%E6%B4%A5%E2%80%9C%E6%B8%B8%E2%80%9D%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/05/19/%E5%A4%A9%E6%B4%A5%E2%80%9C%E6%B8%B8%E2%80%9D%E8%AE%B0/</id>
    <published>2020-05-19T04:58:00.000Z</published>
    <updated>2020-05-19T04:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片"><a href="#本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片" class="headerlink" title="本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片"></a>本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片</h3><p>个人的游记，我只是把一些事情记录一下，并没有用华丽的语言修饰，我个人也不是很喜欢这种“奢侈”的装饰。。。</p><h2 id="day-1"><a href="#day-1" class="headerlink" title="day 1"></a>day 1</h2><p>71.5.0202</p><p>早上比较兴奋，5.50自己醒了，后来又睡着了，然后7点左右我妈把我叫醒。简单收拾收拾就出发了</p><p>一点也不堵车，到了之后先去了和平里搬箱子（搬家），顺便联系了一下网上认识的五中的一个学姐。吐槽一句：和平里那个房子真的是味道特大！！！</p><p>然后去了香槟城，进去把包放下，准备去吃午饭</p><p>我忘了叫啥来着，吃的自助饺子，挺划算的，3个人90左右，饺子是厨师现包的，然后可以自己拿自己煮，还有好多小菜啥的（写到这儿我饿了QAQ）</p><p>然后吃完饺子去了武清图书馆，借了4本书，人挺少的，进馆要出示天津的健康码啥的，我们现弄，门口的保安很热心，也很有耐心，帮我们弄好。</p><p>然后去了区政府对面的公园，特别干净，花啊树啊都特别整齐，草（一种植物）也特别绿。</p><p>差不多逛一圈回家，某位上海初二大佬让我帮忙做了个html的大转盘，他们英语课用。</p><p>做完之后写了篇题解，然后打算研究一下搭建个人博客，于是过了一晚上，搭出了雏形。</p><p>最后11点多睡觉了，打的地铺，有一个单人折叠床但是不想睡，嘎吱嘎吱响。</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>81.5.0202</p><p>早上7点多醒了，吃饭，上课（摸鱼）。上午把个人博客搭完了。（就是现在这个）</p><p>中午我爸妈出去买了好多吃的（凉皮啊凉面啊炸糕啊田螺啊凉菜啊包子啊等等等等）嗯都挺好吃的（滑稽）</p><p>下午上了节py爬虫课，爬了京东的商品，后来想爬淘宝发现有反爬虫，算了。。。</p><p>晚上在屋子里和我爸玩了会儿球，我妈在旁边边溜达，边听（唱）老歌。。。（笑）</p><p>后来就睡觉了</p><p>顺便说一下武清这边挺干净的，上午看到了路上洒水车，一条路走好几遍，每条街都特别干净，以及武清的路基本上都是方方正正的。</p><p>还有就是天津18号都开学了，我家楼下就是小学，然后昨天看他们上学，上操啥的挺有意思</p><p>武清这边学校真的多，说有七八十所都不夸张，基本上学校挨着学校，早上在楼上看楼下上学的人，就有4种校服</p><h2 id="day-3"><a href="#day-3" class="headerlink" title="day 3"></a>day 3</h2><p>91.5.0202</p><p>早上8点才醒，慌慌忙忙一边上课一边吃饭，然后又试了试淘宝的爬虫，然而并没有什么*用。。。</p><p>后来准备回家，纠结了一会儿是在天津吃还是在北京吃，最后决定回家。</p><p>回家之前在楼下的一家超市（东西特便宜）买了点小零食（薯片啊面包啊还有一堆辣的肉啥的）（逐渐肥宅化），然后就开车回家喽</p><p>啊对了，路上路过杨村一中，我们开车绕着看了一圈，校园真大，环境也好，绿化也特别多…我好像还看见了里头的学生，加油考上杨一！</p><p>The end</p><p>by X3B0A1.</p><p>2020.5.19</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片&quot;&gt;&lt;a href=&quot;#本文记录了我在5月17-19日三天，去天津办户口（玩耍）的事情，由于是在回家路上写的，没有联网，所以莫得图片&quot; class=&quot;hea</summary>
      
    
    
    
    
    <category term="daily life" scheme="https://x3b0a1.github.io/tags/daily-life/"/>
    
  </entry>
  
  <entry>
    <title>A+B problem 题解</title>
    <link href="https://x3b0a1.github.io/2020/05/18/A+B/"/>
    <id>https://x3b0a1.github.io/2020/05/18/A+B/</id>
    <published>2020-05-18T03:36:56.000Z</published>
    <updated>2020-05-18T03:36:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-B-problem-题解"><a href="#A-B-problem-题解" class="headerlink" title="A + B problem 题解"></a>A + B problem 题解</h1><p>大家好,今天我来讲解一下A+B problem </p><p>首先我们来看一下题目描述：</p><ul><li>输入两个整数 $a,b$ ，输出它们的和 ( $∣a∣,∣b∣≤10<br>^9$ )</li></ul><p>嗯，这道题是一道我们小学一年级就会做的题，可是我们如何使用c++来实现呢？</p><p>我们可以这样想： <strong>先声明两个变量来存储输入的值，再输出这两个变量相加所得的和。</strong></p><p>我们看到题目中说数据范围是 $10^9$ ，$int$ 型变量的范围是2的31次方，比题目的数据范围要大，因此我们可以使用整形数组来储存。</p><p>下面是这道题的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;      //输入输出流所在的头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;    <span class="comment">//使用标准命名空间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;             <span class="comment">//主函数入口</span></span><br><span class="line">    <span class="keyword">int</span> a, b;           <span class="comment">//声明两个整形变量a和b</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;      <span class="comment">//输入a和b</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a + b;      <span class="comment">//输出a和b的和</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;           <span class="comment">//不要忘记返回0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>end.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;A-B-problem-题解&quot;&gt;&lt;a href=&quot;#A-B-problem-题解&quot; class=&quot;headerlink&quot; title=&quot;A + B problem 题解&quot;&gt;&lt;/a&gt;A + B problem 题解&lt;/h1&gt;&lt;p&gt;大家好,今天我来讲解一下A+B pr</summary>
      
    
    
    
    
    <category term="problem" scheme="https://x3b0a1.github.io/tags/problem/"/>
    
  </entry>
  
  <entry>
    <title>动态规划复习笔记</title>
    <link href="https://x3b0a1.github.io/2020/05/18/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E2%80%94%E2%80%94%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://x3b0a1.github.io/2020/05/18/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E2%80%94%E2%80%94%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-18T03:36:15.000Z</published>
    <updated>2020-05-18T03:36:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h2><p>本蒟蒻学习完动态规划后仍然有些懵，于是就有了这篇复习笔记，希望可以通过这种方式使我掌握动态规划。</p><p>欢迎各位大佬挑错。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><p>动态规划的基本概念</p><ol><li><p>什么是动态规划</p></li><li><p>动态转移方程</p></li><li><p>无后效性</p></li><li><p>最优子结构</p></li></ol></li><li><p>动态规划解题步骤</p></li></ol><h2 id="动态规划的基本概念"><a href="#动态规划的基本概念" class="headerlink" title="动态规划的基本概念"></a>动态规划的基本概念</h2><p>什么是动态规划？</p><p><strong>把一个大问题转换成若干个规模较小的同类型问题</strong>（子问题），当我们求出这些子问题的答案，大问题便可以求出。</p><p>在求解这些小问题的过程中，需要<strong>把重复计算的答案记录到数组中</strong>，如果遇到相同的小问题，便直接查询出结果。<br><img src="https://cdn.luogu.com.cn/upload/image_hosting/1wt2w1ap.png" alt=""></p><p>我们来看一下官方的说法：</p><ul><li>指把多阶段过程转化为一系列单阶段问题，利用各阶段之间的关系，逐个求解</li></ul><p>其中，各阶段之间的关系，指的就是<strong>状态转移方程</strong>。那么状态转移方程是什么呢？其实就是大问题与子问题之间的关系。</p><p><strong>举个例子</strong>：假如我们有<strong>1</strong>元、<strong>5</strong>元和<strong>11</strong>元的纸币若干张，怎样才能使用尽可能少的纸币凑15元呢？</p><p>按照正常的思路，我们会尽可能的多拿面值大的：</p><p>$11×1 + 1×4 = 15$ ，一共5张。</p><p>但是这是最优的吗？</p><p>可以发现<br>$3×5 = 15$ ，一共3张，按常规思路来，并不是最优的。</p><p>我们不妨倒推回去 : 凑成15，有三种情况：</p><ol><li>取11： $11 + 4 = 15$</li><li>取5：  $5 + 10 = 15$</li><li>取1： $1 + 14 = 15$</li></ol><p>以此类推，我们可以发现第二种，取5所需的纸币是最少的。</p><p>我们用$f(n)$来表示凑出n元所需的纸币数：</p><p>要想求$f(n)$，只需要知道 $f(n-1),f(n-5),f(n-11)$ 三者中的最小值，也就是：</p><h3 id="f-n-min-f-n-1-f-n-5-f-n-11"><a href="#f-n-min-f-n-1-f-n-5-f-n-11" class="headerlink" title="$f(n) = min[ f(n-1), f(n-5), f(n-11)] $"></a>$f(n) = min[ f(n-1), f(n-5), f(n-11)] $</h3><p>这就是一个<strong>动态转移方程</strong></p><hr><p>还有一些其他的概念：</p><hr><h3 id="无后效性："><a href="#无后效性：" class="headerlink" title="无后效性："></a>无后效性：</h3><p>要求出$f(15)$，只需要知道$f(14),f(10),f(4)$的值，而$f(14),f(10),f(4)$是如何算出来的，对之后的问题没有影响。<br><strong>将来的和之前的没有关系，就是无后效性</strong></p><hr><h3 id="最优子结构："><a href="#最优子结构：" class="headerlink" title="最优子结构："></a>最优子结构：</h3><p>我们只要知道子问题$f(14)、f(10)、f(4)$的最优解，就可以得出大问题$f(15)$的最优解。</p><p><strong>大问题的最优解可以由小问题的最优解推出</strong></p><p>这种性质就叫“最优子结构性质”。</p><hr><h4 id="当一道题可以分成若干个子问题，并且满足无后效性和最优子结构时，我们就可以使用动态规划来做"><a href="#当一道题可以分成若干个子问题，并且满足无后效性和最优子结构时，我们就可以使用动态规划来做" class="headerlink" title="当一道题可以分成若干个子问题，并且满足无后效性和最优子结构时，我们就可以使用动态规划来做"></a>当一道题可以分成若干个子问题，并且满足无后效性和最优子结构时，我们就可以使用动态规划来做</h4><hr><h2 id="2-动态规划的解题步骤："><a href="#2-动态规划的解题步骤：" class="headerlink" title="2.动态规划的解题步骤："></a>2.动态规划的解题步骤：</h2><ol><li>把一个大问题分成几个小问题</li><li>求解小问题</li><li>从小问题中得到大问题的解</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0.前言&quot;&gt;&lt;/a&gt;0.前言&lt;/h2&gt;&lt;p&gt;本蒟蒻学习完动态规划后仍然有些懵，于是就有了这篇复习笔记，希望可以通过这种方式使我掌握动态规划。&lt;/p&gt;
&lt;p&gt;欢迎各位大佬</summary>
      
    
    
    
    
    <category term="algorithm" scheme="https://x3b0a1.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>制作五子棋AI</title>
    <link href="https://x3b0a1.github.io/2020/05/18/%E5%88%B6%E4%BD%9C%E4%BA%94%E5%AD%90%E6%A3%8Bai/"/>
    <id>https://x3b0a1.github.io/2020/05/18/%E5%88%B6%E4%BD%9C%E4%BA%94%E5%AD%90%E6%A3%8Bai/</id>
    <published>2020-05-18T03:35:18.000Z</published>
    <updated>2020-05-18T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于本文："><a href="#关于本文：" class="headerlink" title="关于本文："></a>关于本文：</h3><p>这是本蒟蒻的第一篇博客，介绍了我5升6暑假用一周时间做的作品</p><p>语言： <del>Html5，</del> JavaScript</p><p>成品：<a href="https://xry-oier.github.io/intro-html/" target="_blank" rel="noopener">五子棋AI</a></p><hr><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要:"></a><strong>摘要</strong>:</h4><p>阿尔法狗对战柯洁围棋大赛很热门，那只是人工智能中的一个方向，展示了机器能代替人做某些事情。而围棋是很讲究智力的游戏，所以实现起来也是很难的，我用JS写了一个小程序——五子棋，五子棋相对来讲简单很多。</p><h4 id="关键词："><a href="#关键词：" class="headerlink" title="关键词："></a><strong>关键词</strong>：</h4><p>人工智能；网页编程；HTML5/JavaScript；</p><h4 id="制作背景："><a href="#制作背景：" class="headerlink" title="制作背景："></a><strong>制作背景</strong>：</h4><p>现在，人工智能技术突飞猛进，许多职业已被机器取代，那么怎样用简单的算法实现五子棋ai呢？</p><h4 id="制作材料："><a href="#制作材料：" class="headerlink" title="制作材料："></a><strong>制作材料</strong>：</h4><p>电脑</p><h4 id="设计思路："><a href="#设计思路：" class="headerlink" title="设计思路："></a><strong>设计思路</strong>：</h4><ul><li><p>棋盘的实现：</p><pre><code>通过循环画直线</code></pre></li><li><p>棋子的实现: </p><pre><code>画出你想要的棋子，渐变填充颜色，封装成一个函数供调用。</code></pre></li><li><p>落子的实现:</p><pre><code>用数组存放每一个落子点，满足条件就落下对应的子</code></pre></li><li><p>赢法数组:</p><pre><code>用一个二维的数组记录五子棋的所有赢法。每种赢法都有一个值，值达到5就结束游戏。</code></pre></li><li><p>确定计算机落子点:</p><pre><code>这是难点，我们通过为某种赢法附一个权值，权值最大的就是落子价值最大的。</code></pre></li><li><p>实现计算机落子:</p><pre><code>通过上一步计算机找到了权值最大的落子坐标后，我们就可以实现落子了。</code></pre></li></ul><hr><h2 id="制作过程："><a href="#制作过程：" class="headerlink" title="制作过程："></a>制作过程：</h2><h4 id="第一步：写H5框架："><a href="#第一步：写H5框架：" class="headerlink" title="第一步：写H5框架："></a>第一步：写H5框架：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Wu Zi Qi--AI&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style type="text/</span>css<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h4><p>本程序主要使用canvas检测鼠标点击返回<br>值来进行落子,创建canvas对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.innerHTML = <span class="string">'&lt;canvas id="chess" width="450" height="450"&gt; &lt;/canvas&gt;'</span>;</span><br><span class="line"><span class="keyword">var</span> chess = <span class="built_in">document</span>.getElementById(<span class="string">'chess'</span>);</span><br></pre></td></tr></table></figure><h4 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h4><p>创建赢法数组，统计数组等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//赢法数组,用来统计所有的赢法</span></span><br><span class="line"><span class="keyword">var</span> wins = [];</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//赢法统计数组，用来统计</span></span><br><span class="line"><span class="keyword">var</span> myWin = [];</span><br><span class="line"><span class="keyword">var</span> computerWin = [];</span><br></pre></td></tr></table></figure><h4 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h4><p>创建并初始化数组显示棋盘</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chessBoard = [];</span><br><span class="line"><span class="comment">//数组显示棋盘</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">chessBoard[i] = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">chessBoard[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第五步："><a href="#第五步：" class="headerlink" title="第五步："></a>第五步：</h4><p>画棋盘</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> context = chess.getContext(<span class="string">'2d'</span>);</span><br><span class="line"><span class="comment">//画棋盘</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">context.strokeStyle = <span class="string">'#00000'</span>;<span class="comment">//设置颜色</span></span><br><span class="line">context.beginPath();</span><br><span class="line">context.moveTo(<span class="number">15</span>, <span class="number">15</span> + i * <span class="number">30</span>);<span class="comment">//移动</span></span><br><span class="line">context.lineTo(<span class="number">435</span>, <span class="number">15</span> + i * <span class="number">30</span>);<span class="comment">//绘画</span></span><br><span class="line"></span><br><span class="line">context.moveTo(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">15</span>);<span class="comment">//移动</span></span><br><span class="line">context.lineTo(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">435</span>);<span class="comment">//绘画</span></span><br><span class="line">context.stroke();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第六步："><a href="#第六步：" class="headerlink" title="第六步："></a>第六步：</h4><p>对赢法数组进行初始化和赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化赢法数组同初始化显示棋盘数组，省略</span></span><br><span class="line"><span class="comment">//横向</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++) &#123;</span><br><span class="line">wins[i][j+k][count] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//纵向，左斜和右斜以此类推</span></span><br></pre></td></tr></table></figure><h4 id="第七步："><a href="#第七步：" class="headerlink" title="第七步："></a>第七步：</h4><p>初始化玩家和ai数组（略</p><h4 id="第八步："><a href="#第八步：" class="headerlink" title="第八步："></a>第八步：</h4><p>画棋子，为了使棋子更加逼真，可以在棋子的脚上加一点渐变色，比如黑色棋子的右上角有白色渐变，从而模仿真实棋子反光（图一）。同时获取鼠标点击的位置，进行落子。</p><p>最后检查玩家获胜（即五子相连）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//画棋子</span></span><br><span class="line">chess.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="comment">//鼠标点击容差再30以内（只要点击范围在以交叉点为中心的30*30的正方形状内，都算该交叉点）</span></span><br><span class="line"><span class="keyword">var</span> i = <span class="built_in">Math</span>.floor(e.offsetX / <span class="number">30</span>);</span><br><span class="line"><span class="keyword">var</span> j = <span class="built_in">Math</span>.floor(e.offsetY / <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chessBoard[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">15</span> + j * <span class="number">30</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI);</span><br><span class="line"><span class="keyword">var</span> grd = context.createRadialGradient(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">15</span> + j * <span class="number">30</span>, <span class="number">13</span>, <span class="number">15</span> + i * <span class="number">30</span> + <span class="number">2</span>, <span class="number">15</span> + j * <span class="number">30</span> - <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">grd.addColorStop(<span class="number">0</span>, <span class="string">'black'</span>);</span><br><span class="line">grd.addColorStop(<span class="number">1</span>, <span class="string">'white'</span>);</span><br><span class="line">context.fillStyle = grd;</span><br><span class="line">context.fill();</span><br><span class="line">context.stroke();</span><br><span class="line"></span><br><span class="line">chessBoard[i][j] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//检查玩家获胜</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; count; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (wins[i][j][k]) &#123;</span><br><span class="line">myWin[k]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果玩家赢了，则弹出警告框显示 you win！</span></span><br><span class="line"><span class="keyword">if</span> (myWin[k] == <span class="number">5</span>) &#123;</span><br><span class="line">alert(<span class="string">"you win!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用ai算法</span></span><br><span class="line">setTimeout(<span class="string">"computerAI()"</span>,<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第九步："><a href="#第九步：" class="headerlink" title="第九步："></a>第九步：</h4><p>这是本程序最核心的部分–ai算法。</p><p>这里主要是运用了二维数组进行存储每个点上的危险指数，比如玩家在中心位置下了一颗棋子，那么ai就会对这个棋子周围一圈通过计算，加上相对应的值。例：图二，玩家为黑方，控制台中第六行第八列（经过反转处理）为黑子的落子点，周围对应的点加上了对应的值。 </p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/20x5o5yy.png" alt="图二"></p><p>那么现在可以分两种ai，一种是进攻类，一种是防守类，两者的区别在于ai的分数和玩家的分数加的多少。</p><p> <strong>1.进攻类ai</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ai 算法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">computerAI</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> myScore = [];</span><br><span class="line">   <span class="keyword">var</span> computerScore = [];</span><br><span class="line"><span class="keyword">var</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> u = <span class="number">0</span>, v = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">myScore[i] = [];</span><br><span class="line">computerScore[i] = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">myScore[i][j] = <span class="number">0</span>;</span><br><span class="line">computerScore[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line"><span class="comment">//for循环嵌套，遍历棋盘</span></span><br><span class="line"><span class="keyword">if</span> (chessBoard[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; count; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (wins[i][j][k]) &#123;</span><br><span class="line"><span class="keyword">switch</span>(myWin[k]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">myScore[i][j] += <span class="number">10</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">myScore[i][j] += <span class="number">200</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//case 3和4只是增加的分数不同，略</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ai加分大于myscore，故为攻击型，即case 1中加的分数&gt;10,略</span></span><br><span class="line"><span class="comment">//判断落子点</span></span><br><span class="line"><span class="keyword">if</span> (myScore[i][j] &gt; max) &#123;<span class="comment">//先看防守</span></span><br><span class="line">max = myScore[i][j];</span><br><span class="line">u = i;</span><br><span class="line">v = j;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (myScore[i][j] == max) &#123;</span><br><span class="line"><span class="keyword">if</span> (computerScore[i][j]&gt;computerScore[u][v])&#123;</span><br><span class="line">u = i;</span><br><span class="line">v = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后看进攻（与防守类似，略</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.防守型</strong>：</p><p>防守型为myscore加分大于ai，故为防守型（代码大致相似，略）</p><h4 id="第十步："><a href="#第十步：" class="headerlink" title="第十步："></a>第十步：</h4><p>画白色棋子，检查ai获胜（与玩家代码相似，略）</p><hr><h3 id="最终效果图："><a href="#最终效果图：" class="headerlink" title="最终效果图："></a>最终效果图：</h3><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/tsl8ykkt.png" alt=""><br><img src="https://cdn.luogu.com.cn/upload/image_hosting/lxz0a9t2.png" alt=""></p><hr><p><del>[作者简介]</del></p><p>X3B0A1，女，北京市昌平区中山实验学校</p><p>主要研究方向：人工智能，c++、python、HTML5/JavaScript</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">参考资料:   </span><br><span class="line">[<span class="number">1</span>]JavaScript - 人工智能 五子棋AI篇</span><br><span class="line">https:<span class="comment">//edu.csdn.net/course/detail/8660?</span></span><br><span class="line">[<span class="number">2</span>]五子棋AI设计心得</span><br><span class="line">https:<span class="comment">//zhuanlan.zhihu.com/p/42811904</span></span><br><span class="line">[<span class="number">3</span>]jS实现五子棋——AI篇</span><br><span class="line">https:<span class="comment">//www.jianshu.com/p/83fa8cc31a38</span></span><br><span class="line">[<span class="number">4</span>]jS实现五子棋——UI篇</span><br><span class="line">https:<span class="comment">//www.jianshu.com/p/b178be0fbec3</span></span><br></pre></td></tr></table></figure><p>欢迎各位大佬提出意见awa</p><p>本蒟蒻目前只会这样一种方法，有其他思路的欢迎提供嘿嘿。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;关于本文：&quot;&gt;&lt;a href=&quot;#关于本文：&quot; class=&quot;headerlink&quot; title=&quot;关于本文：&quot;&gt;&lt;/a&gt;关于本文：&lt;/h3&gt;&lt;p&gt;这是本蒟蒻的第一篇博客，介绍了我5升6暑假用一周时间做的作品&lt;/p&gt;
&lt;p&gt;语言： &lt;del&gt;Html5，&lt;/del</summary>
      
    
    
    
    
    <category term="project" scheme="https://x3b0a1.github.io/tags/project/"/>
    
  </entry>
  
  <entry>
    <title>hello, Hexo!</title>
    <link href="https://x3b0a1.github.io/2020/05/17/hello-Hexo/"/>
    <id>https://x3b0a1.github.io/2020/05/17/hello-Hexo/</id>
    <published>2020-05-17T13:03:15.000Z</published>
    <updated>2020-05-17T13:03:15.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">code</span> here</span><br></pre></td></tr></table></figure><h2 id="hello-Hexo"><a href="#hello-Hexo" class="headerlink" title="hello, Hexo!"></a>hello, Hexo!</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;test&quot;&gt;&lt;a href=&quot;#test&quot; class=&quot;headerlink&quot; title=&quot;test&quot;&gt;&lt;/a&gt;test&lt;/h1&gt;&lt;figure class=&quot;highlight clean&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://x3b0a1.github.io/2020/05/17/hello-world/"/>
    <id>https://x3b0a1.github.io/2020/05/17/hello-world/</id>
    <published>2020-05-17T10:30:13.840Z</published>
    <updated>2020-05-17T10:30:13.840Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.</summary>
      
    
    
    
    
  </entry>
  
</feed>
